{"version":3,"file":"/Users/A1/Downloads/bueno2/src/backend/controllers/user_controller.ts","sources":["/Users/A1/Downloads/bueno2/src/backend/controllers/user_controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAAiC;AACjC,oEAAiE;AAEjE,IAAM,aAAa,GAAG,gBAAM,EAAE,CAAC;AA2CrB,sCAAa;AAzCvB,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,GAAG;IAAlB,iBAwCvB;IAvCD,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;IAG7D,CAAC;;;;;oBACK,eAAe,GAAG,+BAAa,EAAE,CAAC;oBACjC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;oBACnB,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;oBAC1B,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAChC,KAAK,GAAG,EAAE,CAAC;yBACd,CAAA,CAAC,QAAQ,IAAI,CAAC,WAAW,CAAA,EAAzB,wBAAyB;oBAC3B,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;oBAClC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;wBAGtC,qBAAM,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;wBAC9C,sCAAsC;wBACtC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAE,IAAI,EAAE;4BAChC,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;4BAC7D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;yBACjE;6BAAI;4BAEJ,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAC9B,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;4BAE1C,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gCACxC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gCACnB,oDAAoD;4BACpD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAQ;gCACjB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;gCAC5C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;4BACjC,CAAC,CAAC,CAAC;yBACH;wBAAA,CAAC;oBACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAQ;wBAClB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;wBAC5C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBAChC,CAAC,CAAC,EAAA;;oBArBF,SAqBE,CAAC;;;oBACH,CAAC;;;;SACD,CAAC,EAAE,CAAC;AAEN,CAAC,CAAC,CAAC","sourcesContent":["import { Router } from \"express\";\nimport { getRepository } from \"../respositories/user_repository\";\n\nconst getUserRouter = Router();\n\ngetUserRouter.post(\"/\", function (req, res) {  //public\nconsole.log(\"/api/v1/users POST creates a new user account\");\n\t\n\n(async () => {\nconst usersRepository = getRepository(); \n\tconst newUser = req.body;\n\tconst newEmail = req.body.email;\n\tconst newPassword = req.body.password;\n\tconst empty = [];\n\tif(!newEmail || !newPassword){\n\t\tconsole.log(\" 400 Bad Request! \");\n\t\tres.status(400).send(`Bad Request! `);\n\t}else{\n\t\n\t\tawait usersRepository.find(newUser).then((users) => { \n\t\t\t// console.log(JSON.stringify(users));\n\t\t\tif (JSON.stringify(users)!=\"[]\") {\n\t\t\t\tconsole.log(\" 400 Bad Request! user already  in the system\");\n\t\t\t\tres.status(400).send(`Bad Request! user already  in the system`);\n\t\t\t}else{\n\n\t\t\t\tusersRepository.save(newUser);\n\t\t\t\tconsole.log(\" New User Added to System \");\n\n\t\t\t\tusersRepository.find(newUser).then((users) => { \n\t\t\t\t\tres.json(newUser);\n\t\t\t\t//res.send(`New User : `+ newUser.email +` Added!`);\n\t\t\t\t}).catch((e: Error) => {\n\t\t\t\t\tconsole.log(\" 500 Internal Server Error! \");\n\t\t\t\t\tres.status(500).send(e.message); \n\t\t\t\t});\n\t\t\t};\t\n\t\t}).catch((e: Error) => {\n\t\tconsole.log(\" 500 Internal Server Error! \");\n\t\tres.status(500).send(e.message); \n\t\t});\n\t};\n })();\n\n});\n\texport { getUserRouter };\n"]}