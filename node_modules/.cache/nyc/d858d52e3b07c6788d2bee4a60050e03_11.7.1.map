{"version":3,"file":"/Users/A1/Downloads/bueno2/src/backend/controllers/link_controller.ts","sources":["/Users/A1/Downloads/bueno2/src/backend/controllers/link_controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Router, Request, Response } from \"express\";\r\nimport { getRepository } from \"../respositories/link_repository\";\r\nimport { getRepositoryVote } from \"../respositories/vote_repository\";\r\nimport { Repository } from \"typeorm\";\r\nimport { Link } from \"../entities/link\";\r\nimport { Vote } from \"../entities/vote\";\r\nimport { authMiddleware } from \"../middleware/auth_middleware\";\r\n\r\nexport function getHandlers(_linkRepository: Repository<Link>, _voteRepository: Repository<Vote>) {\r\n    \r\n    const getAllLinksHandler = (req: Request, res: Response) => {\r\n        console.log(\"api/v1/links GET returns all links\");\r\n        const linkRepository = getRepository(); \r\n        (async () => {\r\n            const links = await _linkRepository.find()\r\n            .then((links) => {\r\n                console.log(\" links sent succesfully.\");\r\n                res.json(links); \r\n            }).catch((e: Error) => {\r\n                console.log(\" 500 Internal Server Error.\");\r\n                res.status(500).send(e.message); \r\n            });\r\n            \r\n    })();\r\n\r\n    };\r\n    \r\n    const createLink = (req: Request, res: Response) => {\r\n        (async () => {\r\n            console.log(\"/api/v1/links POST creates a new link\");\r\n            const title = req.body.title;\r\n            const user = req.body.userId;\r\n            const url = req.body.url;\r\n            if (!title || !url) {\r\n                 console.log(\" 400 Bad request!\");\r\n                res.status(400).send(\"Bad request!\");\r\n            } else if (!user) {\r\n                 console.log(\" 401 Unauthorized!\");\r\n                res.status(401).send(\"Unauthorized!\");\r\n            } else {\r\n\r\n                const newLink = await _linkRepository.save({ user: user, title: title, url: url }).then((results) => {\r\n                    console.log(\" links saved successfully.\");\r\n                    return res.json(results);\r\n                }).catch((e: Error) => {\r\n                    console.log(\" 500 Internal Server Error.\");\r\n                    res.status(500).send(e.message); \r\n                })\r\n\r\n                // const newLink = await _linkRepository.save({ user: user, title: title, url: url });\r\n                // return res.json(newLink);\r\n            }            \r\n        })();\r\n\r\n\r\n    };\r\n\r\n\r\n    const deleteLink =  (req: Request, res: Response) => {\r\n\r\n            (async () => {\r\n\r\n            console.log(\"/api/v1/links/:id DELETE deletes a link\");\r\n            const userId = req.body.userId;\r\n            const linkId = parseInt(req.params.id);\r\n            const userOwner = await _linkRepository\r\n            .createQueryBuilder(\"link\")\r\n            .innerJoinAndSelect(\"link.user\", \"users.user.id\")\r\n            .where(\"link.id = :id \", { id: linkId })\r\n            .getOne();\r\n             \r\n            \r\n\r\n            if(userOwner==undefined){\r\n                console.log(\" 400 Bad request!\");\r\n                res.status(400).send(\"Bad Request!\");\r\n\r\n            }else if(userOwner.user.id==userId){\r\n//                const linkFound = await _linkRepository.findOne({ where: { id: linkId }})\r\n\r\n                const linkDelete = await _linkRepository.remove(await _linkRepository.findOne({ where: { id: linkId }})).catch((e: Error) => {\r\n                console.log(\" 500 Internal Server Error.\");\r\n                res.status(500).send(e.message); \r\n                });\r\n                console.log(\" Link Deleted succesfully!\");\r\n                res.send(\"Link Deleted succesfully!\");\r\n            }else{\r\n                console.log(\" 403 Forbidden!\");\r\n                res.status(403).send(\"Forbidden!\");\r\n\r\n            }\r\n\r\n\r\n        })();\r\n    };\r\n\r\n\r\n    const upVoteLink = (req: Request, res: Response) => {\r\n        (async () => {\r\n            console.log(\"/api/v1/links/:id/upvote POST upvote link\");\r\n            const link = req.params.id;\r\n            const user = req.body.userId;\r\n            if (!link) {\r\n                 console.log(\" 400 Bad request!\");\r\n                res.status(400).send(\"Bad request!\");\r\n            } else if (!user) {\r\n                 console.log(\" 401 Unauthorized!\");\r\n                res.status(401).send(\"Unauthorized!\");\r\n            } else {\r\n                const upVoteLink = await _linkRepository.findOne({id: link }).catch((e: Error) => {\r\n                     console.log(\" 500 Internal Server Error.\");\r\n                     res.status(500).send(e.message); \r\n                 });\r\n                const upVote = await _voteRepository.find({ link: link, user: user, isUpvote: true }).catch((e: Error) => {\r\n                     console.log(\" 500 Internal Server Error.\");\r\n                     res.status(500).send(e.message); \r\n                 });\r\n                if(!upVoteLink)\r\n                {\r\n                    console.log(\" 400 Bad Request! link does not exist\");\r\n                    res.status(400).send(\"Bad Request! link does not exist\");\r\n                } \r\n                else if(String(upVote)===\"\")\r\n                {\r\n                    const upVote = await _voteRepository.save({ link: link, user: user, isUpvote: true }).catch((e: Error) => {\r\n                     console.log(\" 500 Internal Server Error.\");\r\n                     res.status(500).send(e.message); \r\n                     });\r\n                    console.log(\" upvoted saved sucessfully!\");\r\n                    res.send(\"upvoted saved sucessfully!\");\r\n                }else{\r\n                    console.log(\" 400 Bad Request! upvote already registered\");\r\n                    res.status(400).send(\"Bad Request! upvote already registered\");\r\n                }\r\n\r\n            }            \r\n        })();\r\n    };\r\n\r\n    const downVoteLink = (req: Request, res: Response) => {\r\n        (async () => {\r\n            console.log(\"/api/v1/links/:id/downvote POST downvote link\");\r\n            const link = req.params.id;\r\n            const user = req.body.userId;\r\n            if (!link) {\r\n                 console.log(\" 400 Bad request!\");\r\n                res.status(400).send(\"Bad request!\");\r\n            } else if (!user) {\r\n                 console.log(\" 401 Unauthorized!\");\r\n                res.status(401).send(\"Unauthorized!\");\r\n            } else {\r\n                const downVoteLink = await _linkRepository.findOne({id: link }).catch((e: Error) => {\r\n                     console.log(\" 500 Internal Server Error.\");\r\n                     res.status(500).send(e.message); \r\n                 });\r\n                const downVote = await _voteRepository.find({ link: link, user: user, isUpvote: false }).catch((e: Error) => {\r\n                     console.log(\" 500 Internal Server Error.\");\r\n                     res.status(500).send(e.message); \r\n                 });\r\n                if(!downVoteLink)\r\n                {\r\n                    console.log(\" 400 Bad Request! link does not exist\");\r\n                    res.status(400).send(\"Bad Request! link does not exist\");\r\n                } \r\n                else if(String(downVote)===\"\")\r\n                {\r\n                    const downVote = await _voteRepository.save({ link: link, user: user, isUpvote: false }).catch((e: Error) => {\r\n                     console.log(\" 500 Internal Server Error.\");\r\n                     res.status(500).send(e.message); \r\n                     });\r\n                    console.log(\" downvoted saved sucessfully!\");\r\n                    res.send(\"downvoted saved sucessfully!\");\r\n                }else{\r\n                    console.log(\" 400 Bad Request! downvote already registered\");\r\n                    res.status(400).send(\"Bad Request! downvote already registered\");\r\n                }\r\n\r\n            }            \r\n        })();\r\n    };\r\n\r\n\r\n\r\n    return {\r\n        getAllLinksHandler,\r\n        createLink,\r\n        upVoteLink,\r\n        downVoteLink,\r\n        deleteLink,\r\n    };\r\n\r\n}\r\n\r\nexport function getLinksRouter() {\r\n    const handlers = getHandlers(getRepository(),getRepositoryVote());\r\n    const linkRouter = Router();\r\n    linkRouter.get(\"/\", handlers.getAllLinksHandler); // public\r\n    linkRouter.post(\"/\", authMiddleware, handlers.createLink); // private\r\n    linkRouter.delete(\"/:id\", authMiddleware, handlers.deleteLink); // private\r\n    linkRouter.post(\"/:id/upvote\", authMiddleware, handlers.upVoteLink); // private\r\n    linkRouter.post(\"/:id/downvote\", authMiddleware, handlers.downVoteLink); // private\r\n\r\n    return linkRouter;\r\n}\r\n"]}